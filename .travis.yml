os: linux
dist: bionic
language: cpp

services:
  - xvfb
  
addons:
  apt:
    sources:
      - sourceline: 'deb http://apt.llvm.org/bionic/ llvm-toolchain-bionic-12 main'
        key_url: 'https://apt.llvm.org/llvm-snapshot.gpg.key'
      - sourceline: 'ppa:ubuntu-toolchain-r/test'
    packages:
      - gcc-11
      - g++-11
      - clang-11
      - lcov
      - valgrind
      - mesa-utils
      - xvfb
      - libgl1-mesa-dri
      - libglapi-mesa
      - libosmesa6
      #- libxi-dev
    update: true
    
before_install:
  - pip install --user cpp-coveralls
  
jobs:
  include:
  
    - os: linux
      compiler: gcc
      env:
        - CC=gcc-11 CXX=g++-11
        - CONFIG=Release
        
    - os: linux
      compiler: gcc
      env:
        - CC=gcc-11 CXX=g++-11
        - CONFIG=Debug OUTPUT_NAME_POSTFIX=Debug
        - CODECOV_UPLOAD=Yes
        
    - os: linux
      compiler: clang
      env:
        - CC=clang-11 && CXX=clang++-11
        - CONFIG=Release
        
    - os: linux
      compiler: clang
      env:
        - CC=clang-11 && CXX=clang++-11
        - CONFIG=Debug OUTPUT_NAME_POSTFIX=Debug
        
before_script:
  - sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-8 90
  - sudo update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-8 90
  - sudo update-alternatives --install /usr/bin/clang clang /usr/bin/clang-8 90
  - sudo update-alternatives --install /usr/bin/clang++ clang++ /usr/bin/clang++-8 90
  - sudo update-alternatives --install /usr/bin/gcov gcov /usr/bin/gcov-8 90  
  - |
      DOWNLOAD_CMAKE_VERSION=3.18.1
      wget -O cmake.sh https://github.com/Kitware/CMake/releases/download/v${DOWNLOAD_CMAKE_VERSION}/cmake-${DOWNLOAD_CMAKE_VERSION}-Linux-x86_64.sh
      mkdir -p /tmp/cmake
      sudo sh cmake.sh --skip-license --exclude-subdir --prefix=/tmp/cmake
      export PATH=/tmp/cmake/bin:$PATH

  - export DISPLAY=:99.0
  #- mkdir VulkanSDK_latest
  #- cd VulkanSDK_latest
  #- wget -O VulkanSDK_latest.run https://vulkan.lunarg.com/sdk/download/1.0.51.0/linux/vulkansdk-linux-x86_64-1.0.51.0.run?Human=true
  #- tar xf $HOME/Downloads/vulkansdk-linux-x86_64-1.1.xx.y.tar.gz
  #- cd ..
  
  
script:
  # Checks
  - cmake --version
  - g++ --version
  - gcc --version
  - gcov --version
  - python --version
  # Build
  - mkdir Build
  - cd Build
  - cmake -DMOLTEN_ENABLE_COVERAGE=ON -DMOLTEN_ENABLE_VULKAN=OFF -DCMAKE_BUILD_TYPE=${CONFIG} ..
  - cmake --build . --config ${CONFIG}
  # Run test
  - cd ../Bin
  - valgrind --leak-check=full --track-origins=yes --error-exitcode=1 ./MoltenCoreTest${OUTPUT_NAME_POSTFIX}
  - cd ../Build
  
after_success:
  #- lcov --directory ./Core --capture --output-file coverage.info
  #- lcov -e coverage.info '*/Core/Headers/*' '*/Core/Source/*' --output-file coverage.info
  #- lcov --list coverage.info
  - |
    if [ ${CODECOV_UPLOAD} ]; then
      cd $TRAVIS_BUILD_DIR
      bash <(curl -s https://codecov.io/bash);
    fi
  - |
    if [ ${CODECOV_UPLOAD} ]; then
      cd $TRAVIS_BUILD_DIR
      coveralls --help
      coveralls --root . --build-root ./Build -E ".*/Vendor/.*" -E ".*/Test/.*" -E ".*/Editor/.*" -E ".*CMakeFiles.*"
    fi

notifications:
  email: false
