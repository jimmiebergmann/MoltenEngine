environment:
  global:
    PYTHON: "C:\\Python35"
    
  matrix:
  
    - APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2022
      generator: "Visual Studio 17 2022"
      arch: x64
      configuration: Debug
      output_name_postfix: Debug
      
    - APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2022
      generator: "Visual Studio 17 2022"
      arch: x64
      configuration: Release
  
    - APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2019
      generator: "Visual Studio 16 2019"
      arch: x64
      configuration: Debug
      output_name_postfix: Debug
      
    - APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2019
      generator: "Visual Studio 16 2019"
      arch: x64
      configuration: Release
      
cache:
  - C:\ProgramData\VulkanSDK_Installer -> appveyor.yml
      
  
install:
  - git submodule update --init --recursive
  - cmake --version
  - SET PATH=%PYTHON%;%PATH%
  - python --version
  
  # Vulkan cache installer (Old and not working).
  - ps: >-
      if($env:MOLTEN_ENABLE_VULKAN)
      { 
        echo "Vulkan is enabled for this build."
        echo "Check cache and install."
        
        cd C:\ProgramData
        ls
        if(!(Test-Path VulkanSDK_Installer))
        {
          mkdir VulkanSDK_Installer
        }
        cd VulkanSDK_Installer
        ls
        if(!(Test-Path VulkanSDK_Latest.exe -PathType Leaf))
        { 
          echo "Downloading Vulkan."
          wget "https://vulkan.lunarg.com/sdk/download/1.1.126.0/windows/VulkanSDK-1.1.126.0-Installer.exe?Human=true" -outfile "VulkanSDK_Latest.exe"
          echo "Download of Vulkan is complete."
          ls
        }
        echo "Installing Vulkan."
        Start-Process VulkanSDK_Latest.exe /S -Wait
        echo "Installing Vulkan is complete."
        ls
        echo "Vulkan SDK path: $env:VULKAN_SDK"
        
        echo "Changing to appVeyor build folder: $env:APPVEYOR_BUILD_FOLDER"
        cd $env:APPVEYOR_BUILD_FOLDER
      }
      else
      {
        echo "Ignoring vulkan."
      }
  
build_script:
  - ls
  - mkdir Build
  - cd Build
  - echo %configuration%
  - cmake -G "%generator%" -A "%arch%" "-DCMAKE_BUILD_TYPE=%configuration%" "-DMOLTEN_ENABLE_VULKAN=Off" "%MOLTEN_ENABLE_VULKAN%" ..
  - cmake --build . --config %configuration%
   
after_build:
   - cd ../Bin
   - MoltenCoreTest%output_name_postfix%.exe